# Database
DATABASE_URL="postgresql://hive_user:hive_password@localhost:5432/hive_db"

# Next.js
NEXTAUTH_URL="http://localhost:3000"
NEXTAUTH_SECRET="your-secret-key-here"

# Authentication
# Generate a secure JWT secret using: npm run setup
JWT_SECRET="your-64-character-hex-secret-here"

# GitHub OAuth
# Create a GitHub OAuth app at: https://github.com/settings/developers
GITHUB_CLIENT_ID="your-github-client-id"
GITHUB_CLIENT_SECRET="your-github-client-secret"

# GitHub App
# The slug of your GitHub App (found in your app's settings)
GITHUB_APP_SLUG="your-github-app-slug"

# Development/Codespace Authentication
# When POD_URL is defined, a mock authentication provider will be available
# This allows for easy development without requiring GitHub OAuth setup
# Users can sign in with any username (email auto-generated as username@mock.dev)
# Example: POD_URL="https://your-codespace.github.dev"
# POD_URL="http://localhost:3000"

# Token Encryption (for GitHub OAuth tokens)
# Generate a secure 32+ character key for token encryption
TOKEN_ENCRYPTION_KEY="your-32-character-encryption-key-here"
TOKEN_ENCRYPTION_KEY_ID="k2"

#Key Configuration for rotation
ROTATION_OLD_KEYS='{"k1":"<64-hex-old>"}'

# API Authentication
# Secret token for admin API endpoints (e.g. task title updates)
API_TOKEN="your-secret-api-token-here"

# External Services API Keys
# Stakwork API - Get your API key from https://jobs.stakwork.com
STAKWORK_API_KEY="your-stakwork-api-key-here"
STAKWORK_BASE_URL="https://jobs.stakwork.com/api/v1"
# Comma-separated workflow IDs: Live,Test,Unit
STAKWORK_WORKFLOW_ID="43198,43199,43200"
# Generic AI generation workflow ID for architecture, user stories, etc.
STAKWORK_AI_GENERATION_WORKFLOW_ID="your-ai-generation-workflow-id"

# Pool Manager API - Get your API key from https://workspaces.sphinx.chat
POOL_MANAGER_API_KEY="your-pool-manager-api-key-here"
POOL_MANAGER_BASE_URL="https://workspaces.sphinx.chat/api"

# Swarm Superadmin API Key - Used for privileged swarm creation
SWARM_SUPERADMIN_API_KEY="your-swarm-superadmin-api-key-here"
SWARM_SUPER_ADMIN_URL="https://swarm.superadmin.api/v1"

# Graph Service Configuration
# Port for the graph microservice (default: 3355)
# GRAPH_SERVICE_PORT="3355"

# LiveKit Call Integration - Base URL for generating call links
LIVEKIT_CALL_BASE_URL="https://call-link"

# Pool Manager API Credentials
POOL_MANAGER_API_USERNAME="your-pool-manager-api-username-here"
POOL_MANAGER_API_PASSWORD="your-pool-manager-api-password-here"

# Pusher - Real-time messaging service
# Create a free account at https://pusher.com and create an app
PUSHER_APP_ID="your-pusher-app-id"
PUSHER_KEY="your-pusher-key"
PUSHER_SECRET="your-pusher-secret"
PUSHER_CLUSTER="your-pusher-cluster"

# Pusher Client-side (public) variables
NEXT_PUBLIC_PUSHER_KEY="your-pusher-key"
NEXT_PUBLIC_PUSHER_CLUSTER="your-pusher-cluster"

# AWS S3 - File storage for workspace logos and attachments (Vercel OIDC)
# Uses Vercel's OIDC provider for secure, temporary AWS credentials
# No static AWS access keys required
#
# Setup Instructions:
# 1. Create IAM role in AWS with S3 permissions for your bucket
# 2. Configure OIDC trust relationship for Vercel
#    Documentation: https://vercel.com/docs/security/vercel-authentication/oidc
# 3. Set AWS_ROLE_ARN in Vercel environment variables
#
# Required:
AWS_ROLE_ARN="arn:aws:iam::ACCOUNT_ID:role/ROLE_NAME"
S3_BUCKET_NAME="your-s3-bucket-name"
AWS_REGION="us-east-1"

# Feature Flags
# Note: NEXT_PUBLIC_ prefix makes flags available to both client and server
NEXT_PUBLIC_FEATURE_CODEBASE_RECOMMENDATION=false
NEXT_PUBLIC_FEATURE_WORKSPACE_LOGO=false

# AI Services
# Anthropic API Key for Claude AI (used for user story generation, etc.)
# Get your API key from: https://console.anthropic.com/
ANTHROPIC_API_KEY="your-anthropic-api-key-here"
# OpenAI API Key (optional, for future features)
# OPENAI_API_KEY=""

# Payment Processing (for bounty system)
# STRIPE_SECRET_KEY=""
# STRIPE_PUBLISHABLE_KEY="" 

# Sphinx Tribes Integration
NEXT_PUBLIC_SPHINX_TRIBES_URL="https://community.sphinx.chat"

# Stakwork setup
STAKWORK_CUSTOMERS_EMAIL="customer-email"
STAKWORK_CUSTOMERS_PASSWORD="customer-password"

# Development mode is automatically handled by NODE_ENV
# NODE_ENV=development (set by 'npm run dev')
# NODE_ENV=production (set by 'npm run build' and 'npm run start')
# This controls development-only features like test toggles and mock flows

# GITHUB_WEBHOOK_URL="https://app.example.com/api/github/webhook"


