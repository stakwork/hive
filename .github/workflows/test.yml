name: CI Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  unit-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        env:
          TEST_SUITE: unit
          NEXTAUTH_URL: http://localhost:3000
          NEXTAUTH_SECRET: test-secret
          JWT_SECRET: test-jwt-secret
        run: npm run test:unit

  integration-tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: hive_user
          POSTGRES_PASSWORD: hive_password
          POSTGRES_DB: hive_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma client
        env:
          DATABASE_URL: postgresql://hive_user:hive_password@localhost:5432/hive_db
        run: npx prisma generate

      - name: Run Prisma migrations
        env:
          DATABASE_URL: postgresql://hive_user:hive_password@localhost:5432/hive_db
        run: npx prisma migrate deploy

      - name: Run integration tests
        env:
          TEST_SUITE: integration
          DATABASE_URL: postgresql://hive_user:hive_password@localhost:5432/hive_db
          NEXTAUTH_URL: http://localhost:3000
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          GITHUB_CLIENT_ID: ${{ secrets.GITHUB_CLIENT_ID }}
          GITHUB_CLIENT_SECRET: ${{ secrets.GITHUB_CLIENT_SECRET }}
          TOKEN_ENCRYPTION_KEY: ${{ secrets.TOKEN_ENCRYPTION_KEY }}
          STAKWORK_API_KEY: ${{ secrets.STAKWORK_API_KEY }}
          STAKWORK_BASE_URL: https://jobs.stakwork.com/api/v1
          POOL_MANAGER_API_KEY: ${{ secrets.POOL_MANAGER_API_KEY }}
          POOL_MANAGER_BASE_URL: https://workspaces.sphinx.chat/api
          SWARM_SUPERADMIN_API_KEY: ${{ secrets.SWARM_SUPERADMIN_API_KEY }}
          POOL_MANAGER_API_USERNAME: ${{ secrets.POOL_MANAGER_API_USERNAME }}
          POOL_MANAGER_API_PASSWORD: ${{ secrets.POOL_MANAGER_API_PASSWORD }}
          STAKWORK_CUSTOMERS_EMAIL: ${{ secrets.STAKWORK_CUSTOMERS_EMAIL}}
          STAKWORK_CUSTOMERS_PASSWORD: ${{ secrets.STAKWORK_CUSTOMERS_PASSWORD}}
          SWARM_SUPER_ADMIN_URL: placeholder
          LIVEKIT_CALL_BASE_URL: "https://call-link"
        run: npm run test:integration
